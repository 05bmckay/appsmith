ui-test:
  needs: [build, server-build]
  # Only run if the build step is successful
  if: success()
  runs-on: ubuntu-latest
  defaults:
    run:
      working-directory: app/client/perf
      shell: bash
  strategy:
    fail-fast: false
    matrix:
      job:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]

  # Service containers to run with this job. Required for running tests
  services:
    # Label used to access the service container
    redis:
      # Docker Hub image for Redis
      image: redis
      ports:
        # Opens tcp port 6379 on the host and service container
        - 6379:6379
    mongo:
      image: mongo
      ports:
        - 27017:27017

  steps:
    # Check out merge commitGIT BRANCH
    - name: Fork based /ok-to-test checkout
      uses: actions/checkout@v2
      with:
        ref: "refs/pull/${{ github.event.client_payload.pull_request.number }}/merge"

    - name: Use Node.js 14.15.4
      uses: actions/setup-node@v1
      with:
        node-version: "14.15.4"

    - name: Get yarn cache directory path
      id: yarn-dep-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    # Retrieve npm dependencies from cache. After a successful run, these dependencies are cached again
    - name: Cache npm dependencies
      id: yarn-dep-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-yarn-dependencies
      with:
        path: |
          ${{ steps.yarn-dep-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-dep-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-dep-

    # Install all the dependencies
    - name: Install dependencies
      run: yarn install

    - name: Download the react build artifact
      uses: actions/download-artifact@v2
      with:
        name: build
        path: app/client/build

    - name: Download the server build artifact
      uses: actions/download-artifact@v2
      with:
        name: build
        path: app/server/dist

    # Start server
    - name: start server
      working-directory: app/server
      env:
        APPSMITH_MONGODB_URI: "mongodb://localhost:27017/mobtools"
        APPSMITH_REDIS_URL: "redis://127.0.0.1:6379"
        APPSMITH_ENCRYPTION_PASSWORD: "password"
        APPSMITH_ENCRYPTION_SALT: "salt"
        APPSMITH_IS_SELF_HOSTED: false
        APPSMITH_CLOUD_SERVICES_BASE_URL: https://release-cs.appsmith.com
        APPSMITH_CLOUD_SERVICES_USERNAME: ""
        APPSMITH_CLOUD_SERVICES_PASSWORD: ""
      run: |
        ls -l
        ls -l scripts/
        ls -l dist/
        # Run the server in the background and redirect logs to a log file
        ./scripts/start-dev-server.sh &> server-logs.log &

    - name: Wait for 30 seconds for server to start
      run: |
        sleep 30s

    - name: Exit if Server hasnt started
      run: |
        if [[ `ps -ef | grep "server-1.0-SNAPSHOT" | grep java |wc -l` == 0 ]]; then
           echo "Server Not Started";
           exit 1;
         else
           echo "Server Found";
         fi

    - name: Installing Yarn serve
      run: |
        yarn global add serve
        echo "$(yarn global bin)" >> $GITHUB_PATH

    - name: Setting up the perf tests
      shell: bash
      env:
        APPSMITH_SSL_CERTIFICATE: ${{ secrets.APPSMITH_SSL_CERTIFICATE }}
        APPSMITH_SSL_KEY: ${{ secrets.APPSMITH_SSL_KEY }}
        CYPRESS_URL: ${{ secrets.CYPRESS_URL }}
        CYPRESS_USERNAME: ${{ secrets.CYPRESS_USERNAME }}
        CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
        CYPRESS_TESTUSERNAME1: ${{ secrets.CYPRESS_TESTUSERNAME1 }}
        CYPRESS_TESTPASSWORD1: ${{ secrets.CYPRESS_TESTPASSWORD1 }}
        CYPRESS_TESTUSERNAME2: ${{ secrets.CYPRESS_TESTUSERNAME2 }}
        CYPRESS_TESTPASSWORD2: ${{ secrets.CYPRESS_TESTPASSWORD1 }}
        CYPRESS_S3_ACCESS_KEY: ${{ secrets.CYPRESS_S3_ACCESS_KEY }}
        CYPRESS_S3_SECRET_KEY: ${{ secrets.CYPRESS_S3_SECRET_KEY }}
        APPSMITH_DISABLE_TELEMETRY: true
        APPSMITH_GOOGLE_MAPS_API_KEY: ${{ secrets.APPSMITH_GOOGLE_MAPS_API_KEY }}
        POSTGRES_PASSWORD: postgres
      run: |
        ./cypress/setup-test.sh

    - name: Run performance tests
      shell: bash
      env:
        POSTGRES_PASSWORD: postgres
      run: |
        ./start-test.sh
